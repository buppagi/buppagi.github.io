/* ==========================================================================
   MIXINS
   ========================================================================== */

%tab-focus {
  /* Default*/
  outline: thin dotted $focus-color;
  /* Webkit*/
  outline: 5px auto $focus-color;
  outline-offset: -2px;
}

/*
   em function
   ========================================================================== */

@function em($target, $context: $doc-font-size) {
  @return ($target / $context) * 1em;
}


/*
   Bourbon clearfix
   ========================================================================== */

/*
  * Provides an easy way to include a clearfix for containing floats.
  * link http://cssmojo.com/latest_new_clearfix_so_far/
  *
  * example scss - Usage
  *
  * .element {
  *   @include clearfix;
  * }
  *
  * example css - CSS Output
  *
  * .element::after {
  *   clear: both;
  *   content: "";
  *   display: table;
  * }
*/

@mixin clearfix {
  clear: both;

  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

/*
   Compass YIQ Color Contrast
   https://github.com/easy-designs/yiq-color-contrast
   ========================================================================== */

@function yiq-is-light(
  $color,
  $threshold: $yiq-contrasted-threshold
) {
  $red: red($color);
  $green: green($color);
  $blue: blue($color);

  $yiq: (($red*299)+($green*587)+($blue*114))/1000;

  @if $yiq-debug { @debug $yiq, $threshold; }

  @return if($yiq >= $threshold, true, false);
}

@function yiq-contrast-color(
  $color,
  $dark: $yiq-contrasted-dark-default,
  $light: $yiq-contrasted-light-default,
  $threshold: $yiq-contrasted-threshold
) {
  @return if(yiq-is-light($color, $threshold), $yiq-contrasted-dark-default, $yiq-contrasted-light-default);
}

@mixin yiq-contrasted(
  $background-color,
  $dark: $yiq-contrasted-dark-default,
  $light: $yiq-contrasted-light-default,
  $threshold: $yiq-contrasted-threshold
) {
  background-color: $background-color;
  color: yiq-contrast-color($background-color, $dark, $light, $threshold);
}

$rem-base:$doc-font-size;
@function _strip-unit($num) {
  @if type-of($num) !="number" {
    @warn "num: #{$num} is not a number";
    @return null;
  }

  @return $num / ($num * 0 + 1);
}
@function _convert-to-rem($value, $base-value: $rem-base) {
  @if type-of($value) !="number" {
    @warn "value: #{$value} is not a number";
    @return null;
  }

  @if type-of($base-value) !="number" {
    @warn "base-value: #{$base-value} is not a number";
    @return null;
  }

  $value: _strip-unit($value) / _strip-unit($base-value) * 1rem;

  @if (_strip-unit($value)==0) {
    $value: 0;
  }

  // Turn 0rem into 0
  @return $value;
}

@function rem-calc($values, $base-value: $rem-base) {
  @if type-of($values) !="number" {
    @warn "values: #{$values} is not a number";
    @return null;
  }

  @if type-of($base-value) !="number" {
    @warn "base-value: #{$base-value} is not a number";
    @return null;
  }

  $max: length($values);

  @if $max==1 {
    @return _convert-to-rem(nth($values, 1), $base-value);
  }

  $remValues: ();

  @for $i from 1 through $max {
    $remValues: append($remValues, _convert-to-rem(nth($values, $i), $base-value));
  }

  @return $remValues;
}


@mixin element($element) {
  &__#{$element} {
    @content;
  }
}

/// Block Modifier
/// @access public
/// @param {String} $modifier - Modifier's name
@mixin modifier($modifier) {
  &--#{$modifier} {
    @content;
  }
}


// element 줄임말
@mixin e($element) {
  @include element($element) {
    @content;
  }
}

@mixin m($modifier) {
  @include modifier($modifier) {
    @content;
  }
}